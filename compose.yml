services:
  redis:
    image: redis:8.0
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: >
      redis-server --appendonly yes 
        --maxmemory 1024mb 
        --maxmemory-policy volatile-lru 
        --save 60 1000
        --maxclients 10000
        --tcp-keepalive 60
        --timeout 300
        --tcp-backlog 512
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - ENABLE_CLUSTER=false
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "3030:3030"
    depends_on:
      - redis
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:3030" ]
      interval: 60s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_URL=http://backend:3030/api/v1
      - PORT=3001
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:3001" ]
      interval: 60s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
